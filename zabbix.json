{
    "appid": "4297bbc9-69f2-4119-bf4d-731ffe312c22",
    "name": "Zabbix",
    "description": "Splunk SOAR connector for Zabbix",
    "type": "endpoint",
    "product_vendor": "Zabbix LLC",
    "logo": "logo_zabbix.svg",
    "logo_dark": "logo_zabbix_dark.svg",
    "product_name": "Zabbix",
    "python_version": "3",
    "product_version_regex": ".*",
    "publisher": "Splunk Community",
    "contributors": [
        {
            "name": "Ricardo Moreira"
        }
    ],
    "license": "Copyright (c) 2019-2023 Splunk Inc.",
    "app_version": "1.0.0",
    "utctime_updated": "2022-12-01T14:01:15.226660Z",
    "package_name": "phantom_zabbix",
    "main_module": "zabbix_connector.py",
    "min_phantom_version": "5.4.0",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "base_url": {
            "data_type": "string",
            "order": 0,
            "description": "Base URL including the port, e.g. http://zabbix.mydomain:8080",
            "required": true
        },
        "verify_server_cert": {
            "data_type": "boolean",
            "description": "Verify server certificate when using https",
            "order": 1
        },
        "username": {
            "data_type": "string",
            "order": 2,
            "description": "Username",
            "required": true
        },
        "password": {
            "data_type": "password",
            "order": 3,
            "description": "Password",
            "required": true
        },
        "endpoint": {
            "data_type": "string",
            "order": 4,
            "description": "Endpoint for RPC API calls",
            "required": true
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "get host info",
            "identifier": "get_host_info",
            "description": "Get information about an endpoint",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "host": {
                    "description": "Hostname/IP address or Host ID",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "host name",
                        "ip"
                    ],
                    "order": 0,
                    "name": "host"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.host",
                    "data_type": "string",
                    "contains": [
                        "host name",
                        "ip"
                    ],
                    "column_name": "host",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.host_info",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "execute script",
            "identifier": "execute_script",
            "description": "Execute a script against an agent",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "host": {
                    "description": "Host name (exact) or host ID",
                    "data_type": "string",
                    "required": true,
                    "order": 0,
                    "name": "host"
                },
                "script": {
                    "description": "Script name (exact) or script ID",
                    "data_type": "string",
                    "required": true,
                    "order": 1,
                    "name": "script"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.host",
                    "data_type": "string",
                    "column_name": "host",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.script",
                    "data_type": "string",
                    "column_name": "script",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.output",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ],
    "pip_dependencies": {
        "wheel": [
            {
                "module": "beautifulsoup4",
                "input_file": "wheels/py3/beautifulsoup4-4.8.1-py3-none-any.whl"
            },
            {
                "module": "certifi",
                "input_file": "wheels/py3/certifi-2022.12.7-py3-none-any.whl"
            },
            {
                "module": "chardet",
                "input_file": "wheels/shared/chardet-4.0.0-py2.py3-none-any.whl"
            },
            {
                "module": "idna",
                "input_file": "wheels/shared/idna-2.10-py2.py3-none-any.whl"
            },
            {
                "module": "requests",
                "input_file": "wheels/shared/requests-2.25.1-py2.py3-none-any.whl"
            },
            {
                "module": "soupsieve",
                "input_file": "wheels/py3/soupsieve-2.3.2.post1-py3-none-any.whl"
            },
            {
                "module": "urllib3",
                "input_file": "wheels/shared/urllib3-1.26.14-py2.py3-none-any.whl"
            }
        ]
    }
}
